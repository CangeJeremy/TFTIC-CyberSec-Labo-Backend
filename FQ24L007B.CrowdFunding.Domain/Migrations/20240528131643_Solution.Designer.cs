// <auto-generated />
using System;
using FQ24L007B.CrowdFunding.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FQ24L007B.CrowdFunding.Domain.Migrations
{
    [DbContext(typeof(CrowdFundingDbContext))]
    [Migration("20240528131643_Solution")]
    partial class Solution
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Contrepartie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<int>("Montant")
                        .HasColumnType("int");

                    b.Property<int>("ProjetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetId");

                    b.ToTable("Contrepartie", null, t =>
                        {
                            t.HasCheckConstraint("CK_Contrepartie", "Montant > 0");
                        });
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSDATETIME()");

                    b.Property<int>("Montant")
                        .HasColumnType("int");

                    b.Property<int>("ProjetId")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Donation", null, t =>
                        {
                            t.HasCheckConstraint("CK_Donation_Montant", "Montant > 0");
                        });
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContrepartieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSDATETIME()");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContrepartieId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Participation", (string)null);
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Projet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Objectif")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Projet", null, t =>
                        {
                            t.HasCheckConstraint("CK_Projet_Objectif", "Objectif >= 1000");
                        });
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(384)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(75)");

                    b.HasKey("Id");

                    b.ToTable("Utilisateur", (string)null);
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Contrepartie", b =>
                {
                    b.HasOne("FQ24L007B.CrowdFunding.Entitites.Projet", null)
                        .WithMany("Contreparties")
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Donation", b =>
                {
                    b.HasOne("FQ24L007B.CrowdFunding.Entitites.Projet", "Projet")
                        .WithMany("Donations")
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FQ24L007B.CrowdFunding.Entitites.Utilisateur", "Utilisateur")
                        .WithMany("Donations")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Projet");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Participation", b =>
                {
                    b.HasOne("FQ24L007B.CrowdFunding.Entitites.Contrepartie", "Contrepartie")
                        .WithMany("Participations")
                        .HasForeignKey("ContrepartieId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FQ24L007B.CrowdFunding.Entitites.Utilisateur", "Utilisateur")
                        .WithMany("Participations")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Contrepartie");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Projet", b =>
                {
                    b.HasOne("FQ24L007B.CrowdFunding.Entitites.Utilisateur", "Utilisateur")
                        .WithMany("Projets")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Contrepartie", b =>
                {
                    b.Navigation("Participations");
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Projet", b =>
                {
                    b.Navigation("Contreparties");

                    b.Navigation("Donations");
                });

            modelBuilder.Entity("FQ24L007B.CrowdFunding.Entitites.Utilisateur", b =>
                {
                    b.Navigation("Donations");

                    b.Navigation("Participations");

                    b.Navigation("Projets");
                });
#pragma warning restore 612, 618
        }
    }
}
